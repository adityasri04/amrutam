version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: amrutam_postgres
    environment:
      POSTGRES_DB: amrutam_db
      POSTGRES_USER: amrutam_user
      POSTGRES_PASSWORD: amrutam_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - amrutam_network

  redis:
    image: redis:7-alpine
    container_name: amrutam_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - amrutam_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: amrutam_backend
    environment:
      DATABASE_URL: postgresql://amrutam_user:amrutam_password@postgres:5432/amrutam_db
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-here
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-here
      NODE_ENV: development
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - amrutam_network
    command: npm run dev

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: amrutam_frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - amrutam_network
    command: npm run dev

volumes:
  postgres_data:
  redis_data:

networks:
  amrutam_network:
    driver: bridge
